name: $(BuildID)_$(BuildDefinitionName)_$(SourceBranchName)_$(Date:yyyyMMdd)$(Rev:.r)
resources:
- repo: self
  clean: true
phases:

### Windows build ###

- phase: WINDOWS
  displayName: Windows

  condition: succeeded()
  queue:
    name: Hosted VS2017
    timeoutInMinutes: 180
  steps:
  - powershell: ./vsts/echo_inputs.ps1
    displayName: 'Echo Inputs'
    env:
      COMMIT_FROM: $(COMMIT_FROM)
    condition: always()
    
  - powershell: ./vsts/manual_checkout.ps1
    displayName: 'GIT checkout'
    env:
      COMMIT_FROM: $(COMMIT_FROM)
    condition: always()
    
  - powershell: ./vsts/start_tpm_windows.ps1
    displayName: 'Start TPM Simulator'
    env:
      COMMIT_FROM: $(COMMIT_FROM)
    condition: always()
    
  - powershell: ./vsts/build_repo.ps1
    displayName: 'Build and Test'
    env:
      IOT_DPS_CONNECTION_STRING: $(WINDOWS-IOT-DPS-CONNECTION-STRING)
      IOTHUB_EVENTHUB_CONNECTION_STRING: $(WINDOWS-IOTHUB-EVENTHUB-CONNECTION-STRING)
      IOT_DPS_ID_SCOPE: $(WINDOWS-IOT-DPS-ID-SCOPE)
      IOTHUB_CONNECTION_STRING: $(WINDOWS-IOTHUB-CONNECTION-STRING)
      IOT_DPS_TPM_SIMULATOR_IP_ADDRESS: $(WINDOWS-IOT-DPS-TPM-SIMULATOR-IP-ADDRESS)
      IOT_DPS_GLOBAL_ENDPOINT: $(IOT-DPS-GLOBAL-ENDPOINT)
      STORAGE_ACCOUNT_CONNECTION_STRING: $(WINDOWS-STORAGE-ACCOUNT-CONNECTION-STRING)
      IOTHUB_DEVICE_CONN_STRING_INVALIDCERT: $(IOTHUB-DEVICE-CONN-STRING-INVALIDCERT)
      IOTHUB_CONN_STRING_INVALIDCERT: $(IOTHUB-CONN-STRING-INVALIDCERT)
      DPS_GLOBALDEVICEENDPOINT_INVALIDCERT: $(DPS-GLOBALDEVICEENDPOINT-INVALIDCERT)
      PROVISIONING_CONNECTION_STRING_INVALIDCERT: $(PROVISIONING-CONNECTION-STRING-INVALIDCERT)
      CUSTOM_ALLOCATION_POLICY_WEBHOOK: $(CUSTOM-ALLOCATION-POLICY-WEBHOOK)
      FAR_AWAY_IOTHUB_CONNECTION_STRING: $(FAR-AWAY-IOTHUB-CONNECTION-STRING)
    condition: always()

  - task: CopyFiles@2
    displayName: 'Copy Test Results to Artifact Staging Directory'
    inputs:
      SourceFolder: '$(Build.SourcesDirectory)'
      Contents: |
       **/*.trx
       **/*.xml
      TargetFolder: '$(Build.ArtifactStagingDirectory)'
    continueOnError: true
    condition: always()

  - task: PublishBuildArtifacts@1
    displayName: 'Publish Artifact Staging Directory'
    continueOnError: true
    condition: always()

  - task: PublishTestResults@2
    displayName: 'Publish Test Results'
    inputs:
      mergeTestResults: true
    continueOnError: true
    condition: always()

### Android build Other ###
- phase: ANDROID
  displayName: Android Other
  
  condition: succeeded()
  queue:
    name: Hosted VS2017

  steps:
  - powershell: ./vsts/echo_inputs.ps1
    displayName: 'Echo Inputs'
    env:
      COMMIT_FROM: $(COMMIT_FROM)
    condition: always()
    
  - powershell: ./vsts/manual_checkout.ps1
    displayName: 'GIT checkout'
    env:
      COMMIT_FROM: $(COMMIT_FROM)
    condition: always()

  - powershell: ./jenkins/android_java.cmd
    displayName: 'GIT checkout'
    env:
      IOTHUB_CONNECTION_STRING: $(ANDROID-IOTHUB-CONNECTION-STRING)
      STORAGE_ACCOUNT_CONNECTION_STRING: $(ANDROID-STORAGE-ACCOUNT-CONNECTION-STRING)
      IOTHUB_CONN_STRING_INVALIDCERT: $(IOTHUB-CONN-STRING-INVALIDCERT)
      APPCENTER_APP_SECRET: $(APPCENTER-APP-SECRET)
      DEVICE_PROVISIONING_SERVICE_ID_SCOPE: $(ANDROID-IOT-DPS-ID-SCOPE)
      IOT_DPS_CONNECTION_STRING: $(ANDROID-IOT-DPS-CONNECTION-STRING)
      DEVICE_PROVISIONING_SERVICE_GLOBAL_ENDPOINT: $(IOT-DPS-GLOBAL-ENDPOINT)
      INVALID_DEVICE_PROVISIONING_SERVICE_GLOBAL_ENDPOINT: $(DPS-GLOBALDEVICEENDPOINT-INVALIDCERT)
      INVALID_DEVICE_PROVISIONING_SERVICE_CONNECTION_STRING: $(IOTHUB-CONN-STRING-INVALIDCERT)
      CUSTOM_ALLOCATION_POLICY_WEBHOOK: $(CUSTOM-ALLOCATION-POLICY-WEBHOOK)
      FAR_AWAY_IOTHUB_CONNECTION_STRING: $(FAR-AWAY-IOTHUB-CONNECTION-STRING)
    condition: always()
  
  - task: AppCenterTest@1
    displayName: 'E2E with Visual Studio App Center'
    inputs:
      appFile: 'iot-e2e-tests\android\app\build\outputs\apk\debug\app-debug.apk'
      frameworkOption: espresso
      espressoBuildDirectory: 'iot-e2e-tests\android\app\build\outputs\apk\androidTest\debug'
      serverEndpoint: 'AppCenter connection aziotclb'
      appSlug: 'Azure-Iot-Sdk/androide2e'
      devices: 'Azure-Iot-Sdk/api28'
      runOptions: '--test-parameter notAnnotation=com.microsoft.azure.sdk.iot.android.helper.TestGroupA,com.microsoft.azure.sdk.iot.android.helper.TestGroupB,com.microsoft.azure.sdk.iot.android.helper.TestGroupC'
      showDebugOutput: true

### Android build A ###
- phase: ANDROID
  displayName: Android A
  
  condition: succeeded()
  queue:
    name: Hosted VS2017

  steps:
  - powershell: ./vsts/echo_inputs.ps1
    displayName: 'Echo Inputs'
    env:
      COMMIT_FROM: $(COMMIT_FROM)
    condition: always()
    
  - powershell: ./vsts/manual_checkout.ps1
    displayName: 'GIT checkout'
    env:
      COMMIT_FROM: $(COMMIT_FROM)
    condition: always()

  - powershell: ./jenkins/android_java.cmd
    displayName: 'GIT checkout'
    env:
      IOTHUB_CONNECTION_STRING: $(ANDROID-IOTHUB-CONNECTION-STRING)
      STORAGE_ACCOUNT_CONNECTION_STRING: $(ANDROID-STORAGE-ACCOUNT-CONNECTION-STRING)
      IOTHUB_CONN_STRING_INVALIDCERT: $(IOTHUB-CONN-STRING-INVALIDCERT)
      APPCENTER_APP_SECRET: $(APPCENTER-APP-SECRET)
      DEVICE_PROVISIONING_SERVICE_ID_SCOPE: $(ANDROID-IOT-DPS-ID-SCOPE)
      IOT_DPS_CONNECTION_STRING: $(ANDROID-IOT-DPS-CONNECTION-STRING)
      DEVICE_PROVISIONING_SERVICE_GLOBAL_ENDPOINT: $(IOT-DPS-GLOBAL-ENDPOINT)
      INVALID_DEVICE_PROVISIONING_SERVICE_GLOBAL_ENDPOINT: $(DPS-GLOBALDEVICEENDPOINT-INVALIDCERT)
      INVALID_DEVICE_PROVISIONING_SERVICE_CONNECTION_STRING: $(IOTHUB-CONN-STRING-INVALIDCERT)
      CUSTOM_ALLOCATION_POLICY_WEBHOOK: $(CUSTOM-ALLOCATION-POLICY-WEBHOOK)
      FAR_AWAY_IOTHUB_CONNECTION_STRING: $(FAR-AWAY-IOTHUB-CONNECTION-STRING)
    condition: always()
  
  - task: AppCenterTest@1
    displayName: 'E2E with Visual Studio App Center A'
    inputs:
      appFile: 'iot-e2e-tests\android\app\build\outputs\apk\debug\app-debug.apk'
      frameworkOption: espresso
      espressoBuildDirectory: 'iot-e2e-tests\android\app\build\outputs\apk\androidTest\debug'
      serverEndpoint: 'AppCenter connection aziotclb'
      appSlug: 'Azure-Iot-Sdk/androide2e'
      devices: 'Azure-Iot-Sdk/api28'
      runOptions: '--test-parameter annotation=com.microsoft.azure.sdk.iot.android.helper.TestGroupA'
      showDebugOutput: true

### Android build B ###
- phase: ANDROID
  displayName: Android B
  
  condition: succeeded()
  queue:
    name: Hosted VS2017

  steps:
  - powershell: ./vsts/echo_inputs.ps1
    displayName: 'Echo Inputs'
    env:
      COMMIT_FROM: $(COMMIT_FROM)
    condition: always()
    
  - powershell: ./vsts/manual_checkout.ps1
    displayName: 'GIT checkout'
    env:
      COMMIT_FROM: $(COMMIT_FROM)
    condition: always()

  - powershell: ./jenkins/android_java.cmd
    displayName: 'GIT checkout'
    env:
      IOTHUB_CONNECTION_STRING: $(ANDROID-IOTHUB-CONNECTION-STRING)
      STORAGE_ACCOUNT_CONNECTION_STRING: $(ANDROID-STORAGE-ACCOUNT-CONNECTION-STRING)
      IOTHUB_CONN_STRING_INVALIDCERT: $(IOTHUB-CONN-STRING-INVALIDCERT)
      APPCENTER_APP_SECRET: $(APPCENTER-APP-SECRET)
      DEVICE_PROVISIONING_SERVICE_ID_SCOPE: $(ANDROID-IOT-DPS-ID-SCOPE)
      IOT_DPS_CONNECTION_STRING: $(ANDROID-IOT-DPS-CONNECTION-STRING)
      DEVICE_PROVISIONING_SERVICE_GLOBAL_ENDPOINT: $(IOT-DPS-GLOBAL-ENDPOINT)
      INVALID_DEVICE_PROVISIONING_SERVICE_GLOBAL_ENDPOINT: $(DPS-GLOBALDEVICEENDPOINT-INVALIDCERT)
      INVALID_DEVICE_PROVISIONING_SERVICE_CONNECTION_STRING: $(IOTHUB-CONN-STRING-INVALIDCERT)
      CUSTOM_ALLOCATION_POLICY_WEBHOOK: $(CUSTOM-ALLOCATION-POLICY-WEBHOOK)
      FAR_AWAY_IOTHUB_CONNECTION_STRING: $(FAR-AWAY-IOTHUB-CONNECTION-STRING)
    condition: always()
  
  - task: AppCenterTest@1
    displayName: 'E2E with Visual Studio App Center B'
    inputs:
      appFile: 'iot-e2e-tests\android\app\build\outputs\apk\debug\app-debug.apk'
      frameworkOption: espresso
      espressoBuildDirectory: 'iot-e2e-tests\android\app\build\outputs\apk\androidTest\debug'
      serverEndpoint: 'AppCenter connection aziotclb'
      appSlug: 'Azure-Iot-Sdk/androide2e'
      devices: 'Azure-Iot-Sdk/api28'
      runOptions: '--test-parameter annotation=com.microsoft.azure.sdk.iot.android.helper.TestGroupB'
      showDebugOutput: true

### Android build C ###
- phase: ANDROID
  displayName: Android C
  
  condition: succeeded()
  queue:
    name: Hosted VS2017

  steps:
  - powershell: ./vsts/echo_inputs.ps1
    displayName: 'Echo Inputs'
    env:
      COMMIT_FROM: $(COMMIT_FROM)
    condition: always()
    
  - powershell: ./vsts/manual_checkout.ps1
    displayName: 'GIT checkout'
    env:
      COMMIT_FROM: $(COMMIT_FROM)
    condition: always()

  - powershell: ./jenkins/android_java.cmd
    displayName: 'GIT checkout'
    env:
      IOTHUB_CONNECTION_STRING: $(ANDROID-IOTHUB-CONNECTION-STRING)
      STORAGE_ACCOUNT_CONNECTION_STRING: $(ANDROID-STORAGE-ACCOUNT-CONNECTION-STRING)
      IOTHUB_CONN_STRING_INVALIDCERT: $(IOTHUB-CONN-STRING-INVALIDCERT)
      APPCENTER_APP_SECRET: $(APPCENTER-APP-SECRET)
      DEVICE_PROVISIONING_SERVICE_ID_SCOPE: $(ANDROID-IOT-DPS-ID-SCOPE)
      IOT_DPS_CONNECTION_STRING: $(ANDROID-IOT-DPS-CONNECTION-STRING)
      DEVICE_PROVISIONING_SERVICE_GLOBAL_ENDPOINT: $(IOT-DPS-GLOBAL-ENDPOINT)
      INVALID_DEVICE_PROVISIONING_SERVICE_GLOBAL_ENDPOINT: $(DPS-GLOBALDEVICEENDPOINT-INVALIDCERT)
      INVALID_DEVICE_PROVISIONING_SERVICE_CONNECTION_STRING: $(IOTHUB-CONN-STRING-INVALIDCERT)
      CUSTOM_ALLOCATION_POLICY_WEBHOOK: $(CUSTOM-ALLOCATION-POLICY-WEBHOOK)
      FAR_AWAY_IOTHUB_CONNECTION_STRING: $(FAR-AWAY-IOTHUB-CONNECTION-STRING)
    condition: always()
  
  - task: AppCenterTest@1
    displayName: 'E2E with Visual Studio App Center C'
    inputs:
      appFile: 'iot-e2e-tests\android\app\build\outputs\apk\debug\app-debug.apk'
      frameworkOption: espresso
      espressoBuildDirectory: 'iot-e2e-tests\android\app\build\outputs\apk\androidTest\debug'
      serverEndpoint: 'AppCenter connection aziotclb'
      appSlug: 'Azure-Iot-Sdk/androide2e'
      devices: 'Azure-Iot-Sdk/api28'
      runOptions: '--test-parameter annotation=com.microsoft.azure.sdk.iot.android.helper.TestGroupC'
      showDebugOutput: true
      
### Linux build ###
- phase: LINUX
  displayName: Linux

  condition: succeeded()
  queue:
    name: Hosted Ubuntu 1604
    timeoutInMinutes: 180
  steps:
  - powershell: ./vsts/echo_inputs.ps1
    displayName: 'Echo Inputs'
    env:
      COMMIT_FROM: $(COMMIT_FROM)
    condition: always()
    
  - powershell: ./vsts/manual_checkout.ps1
    displayName: 'GIT checkout'
    env:
      COMMIT_FROM: $(COMMIT_FROM)

  - task: Docker@1
    displayName: 'Start TPM Simulator'
    inputs:
      containerregistrytype: 'Container Registry'
      command: 'Run an image'
      imageName: aziotbld/testtpm
      containerName: 'testtpm-instance'
      ports: |
       127.0.0.1:2321:2321
       127.0.0.1:2322:2322
      restartPolicy: unlessStopped      
      
  - powershell: ./vsts/build_repo.ps1
    displayName: 'Build and Test'
    env:
      IOT_DPS_CONNECTION_STRING: $(LINUX-IOT-DPS-CONNECTION-STRING)
      IOTHUB_EVENTHUB_CONNECTION_STRING: $(LINUX-IOTHUB-EVENTHUB-CONNECTION-STRING)
      IOT_DPS_ID_SCOPE: $(LINUX-IOT-DPS-ID-SCOPE)
      IOTHUB_CONNECTION_STRING: $(LINUX-IOTHUB-CONNECTION-STRING)
      IOT_DPS_TPM_SIMULATOR_IP_ADDRESS: $(LINUX-IOT-DPS-TPM-SIMULATOR-IP-ADDRESS)
      IOT_DPS_GLOBAL_ENDPOINT: $(IOT-DPS-GLOBAL-ENDPOINT)
      STORAGE_ACCOUNT_CONNECTION_STRING: $(LINUX-STORAGE-ACCOUNT-CONNECTION-STRING)
      IOTHUB_DEVICE_CONN_STRING_INVALIDCERT: $(IOTHUB-DEVICE-CONN-STRING-INVALIDCERT)
      IOTHUB_CONN_STRING_INVALIDCERT: $(IOTHUB-CONN-STRING-INVALIDCERT)
      DPS_GLOBALDEVICEENDPOINT_INVALIDCERT: $(DPS-GLOBALDEVICEENDPOINT-INVALIDCERT)
      PROVISIONING_CONNECTION_STRING_INVALIDCERT: $(PROVISIONING-CONNECTION-STRING-INVALIDCERT)
      CUSTOM_ALLOCATION_POLICY_WEBHOOK: $(CUSTOM-ALLOCATION-POLICY-WEBHOOK)
      FAR_AWAY_IOTHUB_CONNECTION_STRING: $(FAR-AWAY-IOTHUB-CONNECTION-STRING)
    condition: always()

  - task: CopyFiles@2
    displayName: 'Copy Test Results to Artifact Staging Directory'
    inputs:
      SourceFolder: '$(Build.SourcesDirectory)'
      Contents: |
       **/*.trx
       **/*.xml
      TargetFolder: '$(Build.ArtifactStagingDirectory)'
    continueOnError: true
    condition: always()

  - task: PublishBuildArtifacts@1
    displayName: 'Publish Artifact Staging Directory'
    continueOnError: true
    condition: always()

  - task: PublishTestResults@2
    displayName: 'Publish Test Results'
    inputs:
      mergeTestResults: true
    continueOnError: true
    condition: always()
    
    
    