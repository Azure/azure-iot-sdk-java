name: $(BuildID)_$(BuildDefinitionName)_$(SourceBranchName)_$(Date:yyyyMMdd)$(Rev:.r)

jobs:
  ### Windows ###
  - job: Windows
    timeoutInMinutes: 180
    pool:
      name: Hosted VS2017
    displayName: Windows
    condition: succeeded()
    steps:
      - powershell: ./vsts/echo_versions.ps1
        displayName: 'Echo Versions'
        env:
          COMMIT_FROM: $(COMMIT_FROM)
        condition: always()

      - powershell: ./vsts/start_tpm_windows.ps1
        displayName: 'Start TPM Simulator'
        env:
          COMMIT_FROM: $(COMMIT_FROM)
        condition: always()

      - powershell: ./vsts/build_repo.ps1
        displayName: 'Build and Test'
        env:
          IOT_DPS_CONNECTION_STRING: $(WINDOWS-IOT-DPS-CONNECTION-STRING)
          IOT_DPS_ID_SCOPE: $(WINDOWS-IOT-DPS-ID-SCOPE)
          IOTHUB_CONNECTION_STRING: $(WINDOWS-IOTHUB-CONNECTION-STRING)
          STORAGE_ACCOUNT_CONNECTION_STRING: $(STORAGE-ACCOUNT-CONNECTION-STRING)
          IOTHUB_DEVICE_CONN_STRING_INVALIDCERT: $(IOTHUB-DEVICE-CONN-STRING-INVALIDCERT)
          IOTHUB_CONN_STRING_INVALIDCERT: $(IOTHUB-CONN-STRING-INVALIDCERT)
          DPS_GLOBALDEVICEENDPOINT_INVALIDCERT: $(DPS-GLOBALDEVICEENDPOINT-INVALIDCERT)
          PROVISIONING_CONNECTION_STRING_INVALIDCERT: $(PROVISIONING-CONNECTION-STRING-INVALIDCERT)
          CUSTOM_ALLOCATION_POLICY_WEBHOOK: $(CUSTOM-ALLOCATION-POLICY-WEBHOOK)
          FAR_AWAY_IOTHUB_CONNECTION_STRING: $(FAR-AWAY-IOTHUB-CONNECTION-STRING)
          IS_BASIC_TIER_HUB: $(IS-BASIC-TIER-HUB)
          EVENT_HUB_CONNECTION_STRING: $(WINDOWS-EVENT-HUB-CONNECTION-STRING)
          TARGET_BRANCH: $(System.PullRequest.TargetBranch)
        condition: always()

      - task: CopyFiles@2
        displayName: 'Copy Test Results to Artifact Staging Directory'
        inputs:
          SourceFolder: '$(Build.SourcesDirectory)'
          Contents: |
            **/*.trx
            **/*.xml
          TargetFolder: '$(Build.ArtifactStagingDirectory)'
        continueOnError: true
        condition: always()

      - task: PublishBuildArtifacts@1
        displayName: 'Publish Artifact Staging Directory'
        continueOnError: true
        condition: always()

      - task: PublishTestResults@2
        displayName: 'Publish Test Results'
        inputs:
          mergeTestResults: true
        continueOnError: true
        condition: always()

  ### Linux ###
  - job: Linux
    timeoutInMinutes: 180
    pool:
      name: Hosted Ubuntu 1604
    displayName: Linux
    condition: succeeded()
    steps:
      - powershell: ./vsts/echo_versions.ps1
        displayName: 'Echo Versions'
        env:
          COMMIT_FROM: $(COMMIT_FROM)
        condition: always()

      - task: Docker@1
        displayName: 'Start TPM Simulator'
        inputs:
          containerregistrytype: 'Container Registry'
          command: 'Run an image'
          imageName: aziotbld/testtpm
          containerName: 'testtpm-instance'
          ports: |
            127.0.0.1:2321:2321
            127.0.0.1:2322:2322
          restartPolicy: unlessStopped

      - powershell: ./vsts/build_repo.ps1
        displayName: 'Build and Test'
        env:
          IOT_DPS_CONNECTION_STRING: $(LINUX-IOT-DPS-CONNECTION-STRING)
          IOT_DPS_ID_SCOPE: $(LINUX-IOT-DPS-ID-SCOPE)
          IOTHUB_CONNECTION_STRING: $(LINUX-IOTHUB-CONNECTION-STRING)
          STORAGE_ACCOUNT_CONNECTION_STRING: $(STORAGE-ACCOUNT-CONNECTION-STRING)
          IOTHUB_DEVICE_CONN_STRING_INVALIDCERT: $(IOTHUB-DEVICE-CONN-STRING-INVALIDCERT)
          IOTHUB_CONN_STRING_INVALIDCERT: $(IOTHUB-CONN-STRING-INVALIDCERT)
          DPS_GLOBALDEVICEENDPOINT_INVALIDCERT: $(DPS-GLOBALDEVICEENDPOINT-INVALIDCERT)
          PROVISIONING_CONNECTION_STRING_INVALIDCERT: $(PROVISIONING-CONNECTION-STRING-INVALIDCERT)
          CUSTOM_ALLOCATION_POLICY_WEBHOOK: $(CUSTOM-ALLOCATION-POLICY-WEBHOOK)
          FAR_AWAY_IOTHUB_CONNECTION_STRING: $(FAR-AWAY-IOTHUB-CONNECTION-STRING)
          IS_BASIC_TIER_HUB: $(IS-BASIC-TIER-HUB)
          EVENT_HUB_CONNECTION_STRING: $(LINUX-EVENT-HUB-CONNECTION-STRING)
          TARGET_BRANCH: $(System.PullRequest.TargetBranch)
        condition: always()

      - task: CopyFiles@2
        displayName: 'Copy Test Results to Artifact Staging Directory'
        inputs:
          SourceFolder: '$(Build.SourcesDirectory)'
          Contents: |
            **/*.trx
            **/*.xml
          TargetFolder: '$(Build.ArtifactStagingDirectory)'
        continueOnError: true
        condition: always()

      - task: PublishBuildArtifacts@1
        displayName: 'Publish Artifact Staging Directory'
        continueOnError: true
        condition: always()

      - task: PublishTestResults@2
        displayName: 'Publish Test Results'
        inputs:
          mergeTestResults: true
        continueOnError: true
        condition: always()

  ### Android, Multi configuration build (12 different test groups to cover) ###
  - job: AndroidBuild
    timeoutInMinutes: 15
    pool:
      name: Hosted VS2017
    displayName: Android Build

    steps:
      - powershell: ./vsts/echo_versions.ps1
        displayName: 'Echo Versions'
        env:
          COMMIT_FROM: $(COMMIT_FROM)
        condition: always()

      - powershell: ./vsts/build_e2e_tests.cmd
        displayName: 'E2E Tests Build'
        condition: always()

      - powershell: ./vsts/gradle_build.cmd
        displayName: 'Gradle Build'
        env:
          IOTHUB_CONNECTION_STRING: $(ANDROID-IOTHUB-CONNECTION-STRING)
          STORAGE_ACCOUNT_CONNECTION_STRING: $(STORAGE-ACCOUNT-CONNECTION-STRING)
          IOTHUB_CONN_STRING_INVALIDCERT: $(IOTHUB-CONN-STRING-INVALIDCERT)
          DEVICE_PROVISIONING_SERVICE_ID_SCOPE: $(ANDROID-IOT-DPS-ID-SCOPE)
          IOT_DPS_CONNECTION_STRING: $(ANDROID-IOT-DPS-CONNECTION-STRING)
          INVALID_DEVICE_PROVISIONING_SERVICE_GLOBAL_ENDPOINT: $(DPS-GLOBALDEVICEENDPOINT-INVALIDCERT)
          INVALID_DEVICE_PROVISIONING_SERVICE_CONNECTION_STRING: $(IOTHUB-CONN-STRING-INVALIDCERT)
          CUSTOM_ALLOCATION_POLICY_WEBHOOK: $(CUSTOM-ALLOCATION-POLICY-WEBHOOK)
          FAR_AWAY_IOTHUB_CONNECTION_STRING: $(FAR-AWAY-IOTHUB-CONNECTION-STRING)
          IS_BASIC_TIER_HUB: $(IS-BASIC-TIER-HUB)
          EVENT_HUB_CONNECTION_STRING: $(ANDROID-EVENT-HUB-CONNECTION-STRING)
          TARGET_BRANCH: $(System.PullRequest.TargetBranch)
        condition: always()

      - task: CopyFiles@2
        displayName: 'Copy Test Results to Artifact Staging Directory'
        inputs:
          SourceFolder: '$(Build.SourcesDirectory)/iot-e2e-tests/android/app/build/outputs/apk'
          Contents: |
            *.*
          TargetFolder: '$(Build.ArtifactStagingDirectory)'
        continueOnError: true
        condition: always()

      - task: PublishPipelineArtifact@0
        inputs:
          artifactName: 'androidBuildFiles'
          targetPath: 'iot-e2e-tests/android/app/build/outputs/apk'

  - job: AndroidTest
    timeoutInMinutes: 80
    pool:
      vmImage: 'macOS-latest'
    strategy:
      maxParallel: 17
      matrix:
        TestGroup1:
          ANDROID_TEST_GROUP_ID: TestGroup1
        TestGroup2:
          ANDROID_TEST_GROUP_ID: TestGroup2
        TestGroup3:
          ANDROID_TEST_GROUP_ID: TestGroup3
        TestGroup4:
          ANDROID_TEST_GROUP_ID: TestGroup4
        TestGroup5:
          ANDROID_TEST_GROUP_ID: TestGroup5
        TestGroup6:
          ANDROID_TEST_GROUP_ID: TestGroup6
        TestGroup7:
          ANDROID_TEST_GROUP_ID: TestGroup7
        TestGroup8:
          ANDROID_TEST_GROUP_ID: TestGroup8
        TestGroup9:
          ANDROID_TEST_GROUP_ID: TestGroup9
        TestGroup10:
          ANDROID_TEST_GROUP_ID: TestGroup10
        TestGroup11:
          ANDROID_TEST_GROUP_ID: TestGroup11
        TestGroup12:
          ANDROID_TEST_GROUP_ID: TestGroup12
        TestGroup13:
          ANDROID_TEST_GROUP_ID: TestGroup13
        TestGroup14:
          ANDROID_TEST_GROUP_ID: TestGroup14
        TestGroup15:
          ANDROID_TEST_GROUP_ID: TestGroup15
        TestGroup16:
          ANDROID_TEST_GROUP_ID: TestGroup16
        TestGroup17:
          ANDROID_TEST_GROUP_ID: TestGroup17

    displayName: Android Test
    dependsOn: AndroidBuild
    steps:
      - task: PowerShell@2
        displayName: 'determine if testing needed'
        condition: always()
        inputs:
          targetType: 'filePath'
          filePath: ./vsts/determine_if_android_test_group_needs_to_run.ps1
        env:
          TEST_GROUP_ID: $(ANDROID_TEST_GROUP_ID)
          IS_BASIC_TIER_HUB: $(IS-BASIC-TIER-HUB)
          TARGET_BRANCH: $(System.PullRequest.TargetBranch)

      - task: DownloadPipelineArtifact@0
        condition: eq(variables['task.android.needToRunTestGroup'], 'yes')
        inputs:
          artifactName: 'androidBuildFiles'
          targetPath: $(Build.SourcesDirectory)/iot-e2e-tests/android/app/build/outputs/apk

      - task: Bash@3
        condition: eq(variables['task.android.needToRunTestGroup'], 'yes')
        displayName: 'Start Android Emulator'
        timeoutInMinutes: 10
        continueOnError: false
        inputs:
          targetType: 'filePath'
          filePath: '$(Build.SourcesDirectory)/vsts/StartEmulator.sh'

      - task: Bash@3
        condition: eq(variables['task.android.needToRunTestGroup'], 'yes')
        displayName: 'Run tests on emulator'
        timeoutInMinutes: 45
        inputs:
          targetType: 'filePath'
          filePath: '$(Build.SourcesDirectory)/vsts/RunTestsOnEmulator.sh'
        env:
          TEST_GROUP_ID: $(ANDROID_TEST_GROUP_ID)
